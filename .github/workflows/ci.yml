name: ü©µ CI (test) ü©µ

on:
  pull_request:
    branches: [ "develop", "main" ]
    types: [ opened, synchronize, reopened, ready_for_review ]
  workflow_dispatch: { }

permissions:
  contents: read
  pull-requests: write
  issues: write

concurrency:
  group: pr-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Gradle test (H2)
        id: test
        run: |
          chmod +x ./gradlew
          ./gradlew test -Dspring.profiles.active=test --no-daemon --info

      - name: Publish unit-test results (check UI)
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: ${{ always() && hashFiles('build/test-results/test/**/*.xml') != '' }}
        with:
          files: build/test-results/test/**/*.xml
          comment_mode: off

      - name: Compose message
        id: status
        run: |
          MSG=$([ "${{ steps.test.outcome }}" = "success" ] && echo "‚úÖ Test ÏÑ±Í≥µ" || echo "‚ùå Test Ïã§Ìå®")
          printf "message<<EOF\n%s\nEOF\n" "$MSG" >> "$GITHUB_OUTPUT"

      - name: Comment to PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          MESSAGE: ${{ steps.status.outputs.message }}
        with:
          script: |
            const pr = context.payload.pull_request.number;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr,
              body: `### PR ÌÖåÏä§Ìä∏ Í≤∞Í≥º\n${process.env.MESSAGE}`
            });

      - name: Fail if test failed
        if: ${{ steps.test.outcome != 'success' }}
        run: exit 1
