name: ðŸ’» Deploy - Dev ðŸ’»

on:
  push:
    branches:
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/ninedot-be-app-dev:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/ninedot-be-app-dev:latest

      - name: Select appspec for dev
        run: cp appspec.dev.yml appspec.yml

      - name: Create Deployment Package
        run: |
          echo "DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}" > .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_NAME_DEV=${{ secrets.DB_NAME_DEV }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
          echo "AWS_S3_BUCKET=${{secrets.AWS_S3_BUCKET }}" >> .env
          echo "CODEDEPLOY_APP_NAME=${{ secrets.CODEDEPLOY_DEV_APP_NAME }}" >> .env
          echo "CODEDEPLOY_DG_NAME=${{ secrets.CODEDEPLOY_DEV_DG_NAME}}" >> .env
          echo "DOZZLE_USERNAME=${{ secrets.DOZZLE_USERNAME }}" >> .env
          echo "DOZZLE_PASSWORD=${{ secrets.DOZZLE_PASSWORD }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "GOOGLE_REDIRECT_URI=${{ secrets.GOOGLE_REDIRECT_URI }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env
          echo "GEMINI_RESPONSE_STRUCTURE=${{ secrets.GEMINI_RESPONSE_STRUCTURE }}" >> .env
          echo "GEMINI_SUB_GOAL_RESPONSE_STRUCTURE=${{ secrets.GEMINI_SUB_GOAL_RESPONSE_STRUCTURE}}" >> .env
          
          zip -r deploy-dev.zip .env docker-compose.dev.yml deploy.dev.sh appspec.yml

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Upload Deployment Package to S3
        run: |
          aws s3 cp deploy-dev.zip s3://${{ secrets.AWS_S3_BUCKET }}/deploy-dev.zip

      - name: Deploy to AWS CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name ${{ secrets.CODEDEPLOY_DEV_APP_NAME }} \
            --deployment-group-name ${{ secrets.CODEDEPLOY_DEV_DG_NAME }} \
            --s3-location bucket=${{ secrets.AWS_S3_BUCKET }},bundleType=zip,key=deploy-dev.zip