plugins {
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
}

ext {
    springBootVersion = '3.3.6'
    lombokVersion = '1.18.34'
    coverageExcludes = [
            // 메인
            '**/*Application*',

            // Query DSL Q 클래스
            '**/Q*',

            // dto
            '**/*Request*', '**/*Response*', '**/*Command*', '**/*Query*', '**/*Result*',

            // port (interface)
            '**/*Port*',

            // 설정 파일
            '**/*Config*',

            // 예외 처리
            '**/*Exception*',
    ]
}

allprojects {
    group = 'org.sopt36'
    version = '0.0.1-SNAPSHOT'
    repositories { mavenCentral() }
}

configure(subprojects.findAll { it.name != 'ninedot-api' }) {
    apply plugin: 'java-library'
    apply plugin: 'io.spring.dependency-management'

    java { toolchain { languageVersion = JavaLanguageVersion.of(17) } }

    dependencies {
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        testImplementation 'org.junit.jupiter:junit-jupiter:5.10.3'
        testImplementation 'org.assertj:assertj-core:3.25.3'
        testImplementation 'org.mockito:mockito-core:5.11.0'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        test {
            useJUnitPlatform()
        }
    }

    dependencyManagement {
        imports { mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}" }
    }
}

subprojects {
    apply plugin: 'jacoco'
}

tasks.register('jacocoRootReport', JacocoReport) {
    dependsOn subprojects.collect { it.tasks.withType(Test) }

    classDirectories.setFrom(files(subprojects.collect {
        it.sourceSets.main.output
    }))

    sourceDirectories.setFrom(files(subprojects.collect {
        it.sourceSets.main.java.srcDirs
    }))

    executionData.setFrom(files(subprojects.collect {
        it.layout.buildDirectory.file('jacoco/test.exec')
    }))

    reports {
        html.required = true
        xml.required = true
        csv.required = false
    }
}
